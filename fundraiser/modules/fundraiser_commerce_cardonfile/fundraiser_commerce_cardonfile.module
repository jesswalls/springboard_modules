<?php
/**
 * @file
 * Module file for fundraiser_commerce_cardonfile.
 */

/**
 * Implements hook_views_api().
 */
function fundraiser_commerce_cardonfile_views_api() {
  return array(
    'api' => 3,
    'path' => drupal_get_path('module', 'fundraiser_commerce_cardonfile') . '/includes/views',
  );
}

/**
 * Implements hook_fundraiser_donation_post_create().
 */
function fundraiser_commerce_cardonfile_fundraiser_donation_post_create($donation) {
  fundraiser_commerce_cardonfile_fundraiser_donation_post_update($donation);
}

/**
 * Implements hook_fundraiser_donation_post_update().
 *
 * This function will update the 'field_data_commerce_cardonfile_profile'
 * field's value to the correct billing profile ID when a donation is created
 * or updated.
 *
 * @todo This can be removed once the commerce_cardonfile module supports
 * billing addresses for individual cards.
 */
function fundraiser_commerce_cardonfile_fundraiser_donation_post_update($donation) {
  if (empty($donation->data['cardonfile']) || empty($donation->did)) {
    return;
  }

  $card = commerce_cardonfile_load($donation->data['cardonfile']);
  $card_wrapper = entity_metadata_wrapper('commerce_cardonfile', $card);

  $order = commerce_order_load($donation->did);
  $order_wrapper = entity_metadata_wrapper('commerce_order', $order);

  $card_wrapper->commerce_cardonfile_profile = $order_wrapper->commerce_customer_billing->value();
  $card_wrapper->save();
}
